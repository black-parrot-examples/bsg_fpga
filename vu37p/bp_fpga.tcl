#*****************************************************************************************
# Vivado (TM) v2019.1 (64-bit)
#
# bp_fpga.tcl: Tcl script for re-creating project 'vu37p_test'
#
# Generated by Vivado on Mon Aug 31 12:03:52 PDT 2020
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (bp_fpga.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_noc_links.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_defines.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/RISCV/HardFloat_specialize.vi"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/HardFloat_consts.vi"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_adder_cin.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_buf_ctrl.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_nor2.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/HardFloat_primitives.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/HardFloat_rawFN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/RISCV/HardFloat_specialize.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_fe_be_if.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_lce_cce_if.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_defines.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_pkg.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_aviary_defines.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_aviary_pkg.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_csr_defines.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_rv64_defines.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_rv64_pkg.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/include/bp_be_internal_if_defines.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/include/bp_be_ctl_defines.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/include/bp_be_pkg.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_bypass.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_calculator_top.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_mem/bp_be_csr.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/include/bp_be_dcache_pkt.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/include/bp_be_dcache_wbuf_entry.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/include/bp_be_dcache_pkg.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/include/bp_be_hardfloat_pkg.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_decoder.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_wbuf.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_wbuf_queue.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_checker/bp_be_detector.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_cfg_link_pkg.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_checker/bp_be_director.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_fp_to_rec.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_instr_decoder.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_aux.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_ctl.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_fma.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_int.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_long.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_mem.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_sys.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_mem/bp_be_ptw.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_rec_to_fp.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_regfile.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_checker/bp_be_scheduler.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_be/src/v/bp_be_top.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/include/v/bp_mem_wormhole.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/include/bp_common_mem_if.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/include/v/bp_me_pkg.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/include/v/bp_cce_inst.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/include/v/bp_cce_pkg.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_noc_pkg.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_pkg.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_cacc_complex.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_alu.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_arbitrate.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_branch.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_dir.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_dir_lru_extract.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_dir_segment.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_dir_tag_checker.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_fsm.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_gad.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_inst_decode.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_inst_predecode.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_inst_ram.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_inst_stall.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_loopback.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_msg.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_pending_bits.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_reg.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_spec_bits.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_src_sel.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_cce_wrapper.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_cfg.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_clint_slice.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/include/bp_fe_mem_defines.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/include/bp_fe_defines.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/include/bp_fe_icache.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/include/bp_fe_pkg.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_core.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_core_complex.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/include/bp_fe_icache_pkg.vh"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_core_minimal.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/v/bp_fe_bht.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/v/bp_fe_btb.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/v/bp_fe_icache.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/v/bp_fe_instr_scan.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/v/bp_fe_mem.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/v/bp_fe_pc_gen.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_fe/src/v/bp_fe_top.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cce/bp_io_cce.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_io_complex.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_io_link_to_lce.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_io_tile.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_io_tile_node.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/lce/bp_lce.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/lce/bp_lce_cmd.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/lce/bp_lce_req.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_addr_to_cce_id.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_pkg.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cache/bp_me_cache_dma_to_cce.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cache/bp_me_cache_slice.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_cce_id_to_cord.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cache/bp_me_cce_to_cache.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/cache/bp_me_cce_to_cache_dma.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_bidir.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_client.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_master.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_cord_to_id.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_lce_id_to_cord.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_cmd.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_req.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_resp.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_mem_cmd.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_mem_resp.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_mem_complex.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_multicore.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_nd_socket.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/v/bp_pma.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_sacc_complex.v"
#    "/home/petrisko/scratch/bsg_fpga/common/v/bp_stream_host.v"
#    "/home/petrisko/scratch/bsg_fpga/common/v/bp_stream_mmio.v"
#    "/home/petrisko/scratch/bsg_fpga/common/v/bp_stream_nbf_loader.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_tile.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bp_tile_node.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/v/bp_tlb.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_adder_one_hot.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_arb_fixed.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_array_concentrate_static.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_array_reverse.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_async/bsg_async_fifo.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_top/src/v/bsg_async_noc_link.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_async/bsg_async_ptr_gray.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_buf.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/v/bsg_bus_pack.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_cache/bsg_cache.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_decode.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_dma.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_miss.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_sbuf.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_sbuf_queue.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_to_axi.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_to_axi_rx.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_to_axi_tx.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w_replacement.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w_sync.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w_tag_array.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_circular_ptr.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_clkgate_optional.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_concentrate_static.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_clear_up.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_set_down.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_set_en.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_up_down.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_crossbar_o_by_i.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_decode.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_decode_with_v.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_dff.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_chain.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_en.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_en_bypass.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset_en.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset_en_bypass.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset_set_clear.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_dlatch.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_edge_detect.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_encode_one_hot.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_expand_bitmask.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_common/src/v/bsg_fifo_1r1w_rolly.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small_hardened.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small_unhardened.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_tracker.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_flow_counter.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_hash_bank.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_idiv_iterative.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_idiv_iterative_controller.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_async/bsg_launch_sync_sync.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_lru_pseudo_tree_decode.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_lru_pseudo_tree_encode.v"
#    "/home/petrisko/scratch/bsg_fpga/common/v/bsg_m_axi_lite_to_fifo.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_one_hot.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_sync.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_sync_synth.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_synth.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/hard/ultrascale_plus/bsg_mem/bsg_mem_1rw_sync_mask_write_bit.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_mask_write_byte.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_mask_write_byte_synth.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_synth.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_2r1w_sync.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_2r1w_sync_synth.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_3r1w_sync.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_3r1w_sync_synth.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_mesh_stitch.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_mux.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_bitwise.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_one_hot.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_segmented.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_muxi2_gatestack.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_nand.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_nor3.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_one_fifo.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out_dynamic.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_priority_encode.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_priority_encode_one_hot_out.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_reduce.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_reduce_segmented.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_rotate_left.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_rotate_right.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_round_robin_1_to_n.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_round_robin_arb.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_round_robin_n_to_1.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_scan.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_dynamic.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_full.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_shift_reg.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_strobe.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_transpose.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_dataflow/bsg_two_fifo.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_unconcentrate_static.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator_in.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator_out.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter_in.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter_out.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_decoder_dor.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_input_control.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_output_control.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_xnor.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/compareRecFN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/divSqrtRecFN_small.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/fNToRecFN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/iNToRecFN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/isSigNaNRecFN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/mulAddRecFN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/recFNToFN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/recFNToIN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/recFNToRecFN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/v/design_1_wrapper.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/addRecFN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/HardFloat/source/mulRecFN.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/test/common/bp_cce_mmio_cfg_loader.v"
#    "/home/petrisko/scratch/bsg_fpga/common/v/bp_nbf_to_cce_mem.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_butterfly.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/external/basejump_stl/bsg_misc/bsg_swap.v"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/black-parrot/bp_me/src/asm/roms/mesi.mem"
#    "/home/petrisko/scratch/bsg_fpga/vu37p/xdc/design_1.xdc"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "vu37p_test"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "bp_fpga.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/vu37p_test"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcvu37p-fsvh2892-2LV-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcvu37p-fsvh2892-2LV-e" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "None" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "1" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "1" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "1" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "1" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "1" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "1" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router.vh"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_noc_links.vh"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_defines.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/RISCV/HardFloat_specialize.vi"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/HardFloat_consts.vi"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_adder_cin.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_buf_ctrl.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_nor2.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/HardFloat_primitives.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/HardFloat_rawFN.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/RISCV/HardFloat_specialize.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_fe_be_if.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_lce_cce_if.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_defines.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_pkg.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_aviary_defines.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_aviary_pkg.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_csr_defines.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_rv64_defines.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_rv64_pkg.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/include/bp_be_internal_if_defines.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/include/bp_be_ctl_defines.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/include/bp_be_pkg.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_bypass.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_calculator_top.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_mem/bp_be_csr.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/include/bp_be_dcache_pkt.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/include/bp_be_dcache_wbuf_entry.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/include/bp_be_dcache_pkg.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/include/bp_be_hardfloat_pkg.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_decoder.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_wbuf.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_wbuf_queue.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_checker/bp_be_detector.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_cfg_link_pkg.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_checker/bp_be_director.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_fp_to_rec.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_instr_decoder.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_aux.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_ctl.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_fma.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_int.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_long.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_mem.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_sys.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_mem/bp_be_ptw.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_rec_to_fp.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_regfile.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_checker/bp_be_scheduler.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_be/src/v/bp_be_top.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/include/v/bp_mem_wormhole.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/include/bp_common_mem_if.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/include/v/bp_me_pkg.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/include/v/bp_cce_inst.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/include/v/bp_cce_pkg.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_noc_pkg.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_pkg.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_cacc_complex.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_alu.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_arbitrate.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_branch.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_dir.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_dir_lru_extract.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_dir_segment.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_dir_tag_checker.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_fsm.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_gad.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_inst_decode.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_inst_predecode.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_inst_ram.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_inst_stall.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_loopback.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_msg.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_pending_bits.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_reg.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_spec_bits.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_src_sel.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_cce_wrapper.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_cfg.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_clint_slice.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/include/bp_fe_mem_defines.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/include/bp_fe_defines.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/include/bp_fe_icache.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/include/bp_fe_pkg.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_core.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_core_complex.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/include/bp_fe_icache_pkg.vh"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_core_minimal.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/v/bp_fe_bht.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/v/bp_fe_btb.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/v/bp_fe_icache.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/v/bp_fe_instr_scan.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/v/bp_fe_mem.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/v/bp_fe_pc_gen.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_fe/src/v/bp_fe_top.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cce/bp_io_cce.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_io_complex.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_io_link_to_lce.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_io_tile.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_io_tile_node.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/lce/bp_lce.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/lce/bp_lce_cmd.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/lce/bp_lce_req.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_addr_to_cce_id.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_pkg.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cache/bp_me_cache_dma_to_cce.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cache/bp_me_cache_slice.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_cce_id_to_cord.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cache/bp_me_cce_to_cache.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/cache/bp_me_cce_to_cache_dma.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_bidir.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_client.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_master.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_cord_to_id.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_lce_id_to_cord.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_cmd.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_req.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_resp.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_mem_cmd.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_mem_resp.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_mem_complex.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_multicore.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_nd_socket.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/v/bp_pma.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_sacc_complex.v"] \
 [file normalize "${origin_dir}/../common/v/bp_stream_host.v"] \
 [file normalize "${origin_dir}/../common/v/bp_stream_mmio.v"] \
 [file normalize "${origin_dir}/../common/v/bp_stream_nbf_loader.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_tile.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bp_tile_node.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/v/bp_tlb.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_adder_one_hot.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_arb_fixed.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_array_concentrate_static.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_array_reverse.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_async/bsg_async_fifo.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_top/src/v/bsg_async_noc_link.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_async/bsg_async_ptr_gray.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_buf.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/v/bsg_bus_pack.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_cache/bsg_cache.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_decode.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_dma.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_miss.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_sbuf.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_sbuf_queue.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_to_axi.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_to_axi_rx.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_to_axi_tx.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w_replacement.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w_sync.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w_tag_array.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_circular_ptr.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_clkgate_optional.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_concentrate_static.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_clear_up.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_set_down.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_set_en.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_up_down.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_crossbar_o_by_i.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_decode.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_decode_with_v.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_dff.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_chain.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_en.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_en_bypass.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset_en.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset_en_bypass.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset_set_clear.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_dlatch.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_edge_detect.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_encode_one_hot.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_expand_bitmask.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_common/src/v/bsg_fifo_1r1w_rolly.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small_hardened.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small_unhardened.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_tracker.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_flow_counter.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_hash_bank.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_idiv_iterative.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_idiv_iterative_controller.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_async/bsg_launch_sync_sync.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_lru_pseudo_tree_decode.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_lru_pseudo_tree_encode.v"] \
 [file normalize "${origin_dir}/../common/v/bsg_m_axi_lite_to_fifo.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_one_hot.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_sync.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_sync_synth.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_synth.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/hard/ultrascale_plus/bsg_mem/bsg_mem_1rw_sync_mask_write_bit.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_mask_write_byte.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_mask_write_byte_synth.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_synth.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_2r1w_sync.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_2r1w_sync_synth.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_3r1w_sync.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_3r1w_sync_synth.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_mesh_stitch.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_mux.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_bitwise.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_one_hot.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_segmented.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_muxi2_gatestack.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_nand.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_nor3.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_one_fifo.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out_dynamic.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_priority_encode.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_priority_encode_one_hot_out.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_reduce.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_reduce_segmented.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_rotate_left.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_rotate_right.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_round_robin_1_to_n.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_round_robin_arb.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_round_robin_n_to_1.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_scan.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_dynamic.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_full.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_shift_reg.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_strobe.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_transpose.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_dataflow/bsg_two_fifo.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_unconcentrate_static.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator_in.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator_out.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter_in.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter_out.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_decoder_dor.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_input_control.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_output_control.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_xnor.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/compareRecFN.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/divSqrtRecFN_small.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/fNToRecFN.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/iNToRecFN.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/isSigNaNRecFN.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/mulAddRecFN.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/recFNToFN.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/recFNToIN.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/recFNToRecFN.v"] \
 [file normalize "${origin_dir}/v/design_1_wrapper.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/addRecFN.v"] \
 [file normalize "${origin_dir}/black-parrot/external/HardFloat/source/mulRecFN.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/test/common/bp_cce_mmio_cfg_loader.v"] \
 [file normalize "${origin_dir}/../common/v/bp_nbf_to_cce_mem.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_butterfly.v"] \
 [file normalize "${origin_dir}/black-parrot/external/basejump_stl/bsg_misc/bsg_swap.v"] \
 [file normalize "${origin_dir}/black-parrot/bp_me/src/asm/roms/mesi.mem"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_noc_links.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_defines.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/RISCV/HardFloat_specialize.vi"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/HardFloat_consts.vi"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/HardFloat_primitives.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/HardFloat_rawFN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/RISCV/HardFloat_specialize.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_fe_be_if.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_lce_cce_if.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_defines.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_pkg.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_aviary_defines.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_aviary_pkg.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_csr_defines.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_rv64_defines.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_rv64_pkg.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/include/bp_be_internal_if_defines.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/include/bp_be_ctl_defines.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/include/bp_be_pkg.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_bypass.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_calculator_top.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_mem/bp_be_csr.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/include/bp_be_dcache_pkt.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/include/bp_be_dcache_wbuf_entry.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/include/bp_be_dcache_pkg.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/include/bp_be_hardfloat_pkg.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_decoder.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_wbuf.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_wbuf_queue.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_checker/bp_be_detector.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_cfg_link_pkg.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_checker/bp_be_director.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_fp_to_rec.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_instr_decoder.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_aux.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_ctl.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_fma.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_int.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_long.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_mem.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_pipe_sys.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_mem/bp_be_ptw.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_rec_to_fp.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_calculator/bp_be_regfile.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_checker/bp_be_scheduler.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_be/src/v/bp_be_top.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/include/v/bp_mem_wormhole.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/include/bp_common_mem_if.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/include/v/bp_me_pkg.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/include/v/bp_cce_inst.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/include/v/bp_cce_pkg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_noc_pkg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_pkg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_cacc_complex.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_alu.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_arbitrate.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_branch.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_dir.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_dir_lru_extract.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_dir_segment.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_dir_tag_checker.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_fsm.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_gad.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_inst_decode.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_inst_predecode.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_inst_ram.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_inst_stall.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_loopback.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_msg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_pending_bits.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_reg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_spec_bits.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_src_sel.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_cce_wrapper.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_cfg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_clint_slice.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/include/bp_fe_mem_defines.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/include/bp_fe_defines.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/include/bp_fe_icache.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/include/bp_fe_pkg.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_core.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_core_complex.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/include/bp_fe_icache_pkg.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_core_minimal.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/v/bp_fe_bht.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/v/bp_fe_btb.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/v/bp_fe_icache.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/v/bp_fe_instr_scan.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/v/bp_fe_mem.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/v/bp_fe_pc_gen.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_fe/src/v/bp_fe_top.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cce/bp_io_cce.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_io_complex.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_io_link_to_lce.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_io_tile.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_io_tile_node.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/lce/bp_lce.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/lce/bp_lce_cmd.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/lce/bp_lce_req.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_addr_to_cce_id.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_pkg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cache/bp_me_cache_dma_to_cce.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cache/bp_me_cache_slice.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_cce_id_to_cord.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cache/bp_me_cce_to_cache.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/cache/bp_me_cce_to_cache_dma.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_bidir.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_client.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_master.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_cord_to_id.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_lce_id_to_cord.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_cmd.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_req.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_resp.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_mem_cmd.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_mem_resp.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_mem_complex.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_multicore.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_nd_socket.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/v/bp_pma.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_sacc_complex.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../common/v/bp_stream_host.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../common/v/bp_stream_mmio.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../common/v/bp_stream_nbf_loader.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_tile.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bp_tile_node.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/v/bp_tlb.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_adder_one_hot.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_arb_fixed.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_array_concentrate_static.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_array_reverse.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_async/bsg_async_fifo.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_top/src/v/bsg_async_noc_link.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_async/bsg_async_ptr_gray.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_buf.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/v/bsg_bus_pack.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_cache/bsg_cache.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_decode.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_dma.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_miss.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_sbuf.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_sbuf_queue.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_to_axi.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_to_axi_rx.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_cache/bsg_cache_to_axi_tx.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w_replacement.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w_sync.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_cam_1r1w_tag_array.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_circular_ptr.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_clkgate_optional.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_concentrate_static.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_clear_up.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_set_down.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_set_en.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_counter_up_down.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_crossbar_o_by_i.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_decode.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_decode_with_v.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_dff.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_chain.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_en.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_en_bypass.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset_en.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset_en_bypass.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_dff_reset_set_clear.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_dlatch.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_edge_detect.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_encode_one_hot.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_expand_bitmask.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_common/src/v/bsg_fifo_1r1w_rolly.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small_hardened.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small_unhardened.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_fifo_tracker.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_flow_counter.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_hash_bank.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_idiv_iterative.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_idiv_iterative_controller.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_async/bsg_launch_sync_sync.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_lru_pseudo_tree_decode.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_lru_pseudo_tree_encode.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../common/v/bsg_m_axi_lite_to_fifo.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_one_hot.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_sync.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_sync_synth.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1r1w_synth.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/hard/ultrascale_plus/bsg_mem/bsg_mem_1rw_sync_mask_write_bit.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_mask_write_byte.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_mask_write_byte_synth.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_synth.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_2r1w_sync.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_2r1w_sync_synth.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_3r1w_sync.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_mem/bsg_mem_3r1w_sync_synth.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_mesh_stitch.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_mux.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_bitwise.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_one_hot.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_segmented.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_muxi2_gatestack.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_nand.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_nor3.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_one_fifo.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out_dynamic.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_priority_encode.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_priority_encode_one_hot_out.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_reduce.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_reduce_segmented.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_rotate_left.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_rotate_right.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_round_robin_1_to_n.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_round_robin_arb.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_round_robin_n_to_1.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_scan.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_dynamic.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_full.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_shift_reg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_strobe.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_transpose.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_dataflow/bsg_two_fifo.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_unconcentrate_static.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator_in.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator_out.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter_in.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter_out.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_decoder_dor.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_input_control.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_noc/bsg_wormhole_router_output_control.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_xnor.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/compareRecFN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/divSqrtRecFN_small.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/fNToRecFN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/iNToRecFN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/isSigNaNRecFN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/mulAddRecFN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/recFNToFN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/recFNToIN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/recFNToRecFN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/v/design_1_wrapper.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/addRecFN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/HardFloat/source/mulRecFN.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/test/common/bp_cce_mmio_cfg_loader.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../common/v/bp_nbf_to_cce_mem.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_mux_butterfly.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/external/basejump_stl/bsg_misc/bsg_swap.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/black-parrot/bp_me/src/asm/roms/mesi.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/xdc/design_1.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/xdc/design_1.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xcvu37p-fsvh2892-2LV-e" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:hbm:1.0\
  xilinx.com:ip:ila:6.2\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:util_ds_buf:2.1\
  xilinx.com:ip:xdma:4.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set m_axi_lite [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_lite ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {250000000} \
   CONFIG.PROTOCOL {AXI4LITE} \
   ] $m_axi_lite

  set pci_express_x4 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pci_express_x4 ]

  set pcie_refclk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_refclk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {100000000} \
   ] $pcie_refclk

  set s_apb [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:apb_rtl:1.0 s_apb ]

  set s_axi [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {256} \
   CONFIG.FREQ_HZ {50000000} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {1} \
   CONFIG.HAS_CACHE {1} \
   CONFIG.HAS_LOCK {1} \
   CONFIG.HAS_PROT {1} \
   CONFIG.HAS_QOS {1} \
   CONFIG.HAS_REGION {1} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {1} \
   CONFIG.MAX_BURST_LENGTH {256} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {1} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi


  # Create ports
  set apb_complete [ create_bd_port -dir O -type data apb_complete ]
  set mig_clk [ create_bd_port -dir O -type clk mig_clk ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi} \
   CONFIG.ASSOCIATED_RESET {mig_rstn} \
   CONFIG.FREQ_HZ {50000000} \
 ] $mig_clk
  set mig_rstn [ create_bd_port -dir O -from 0 -to 0 -type rst mig_rstn ]
  set pcie_clk [ create_bd_port -dir O -type clk pcie_clk ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {m_axi_lite} \
   CONFIG.ASSOCIATED_RESET {pcie_rstn} \
   CONFIG.FREQ_HZ {250000000} \
 ] $pcie_clk
  set pcie_lnk_up [ create_bd_port -dir O -type data pcie_lnk_up ]
  set pcie_perstn [ create_bd_port -dir I -type rst pcie_perstn ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $pcie_perstn
  set pcie_rstn [ create_bd_port -dir O -from 0 -to 0 -type rst pcie_rstn ]
  set reset [ create_bd_port -dir I -type rst reset ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $reset

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.ENABLE_ADVANCED_OPTIONS {1} \
   CONFIG.NUM_MI {1} \
 ] $axi_interconnect_0

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKOUT1_JITTER {123.073} \
   CONFIG.CLKOUT1_PHASE_ERROR {85.928} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {50.0000} \
   CONFIG.CLKOUT2_JITTER {107.111} \
   CONFIG.CLKOUT2_PHASE_ERROR {85.928} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.CLKOUT3_JITTER {107.111} \
   CONFIG.CLKOUT3_PHASE_ERROR {85.928} \
   CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {100.000} \
   CONFIG.CLKOUT3_USED {true} \
   CONFIG.CLKOUT4_JITTER {89.528} \
   CONFIG.CLKOUT4_PHASE_ERROR {85.928} \
   CONFIG.CLKOUT4_REQUESTED_OUT_FREQ {250.000} \
   CONFIG.CLKOUT4_USED {true} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {4.000} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {20.000} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {10} \
   CONFIG.MMCM_CLKOUT2_DIVIDE {10} \
   CONFIG.MMCM_CLKOUT3_DIVIDE {4} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.NUM_OUT_CLKS {4} \
   CONFIG.PRIM_SOURCE {Global_buffer} \
   CONFIG.USE_LOCKED {false} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create instance: hbm_0, and set properties
  set hbm_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:hbm:1.0 hbm_0 ]
  set_property -dict [ list \
   CONFIG.HBM_MMCM_FBOUT_MULT0 {70} \
   CONFIG.USER_APB_PCLK_0 {100} \
   CONFIG.USER_AXI_CLK_FREQ {250} \
   CONFIG.USER_CLK_SEL_LIST0 {AXI_00_ACLK} \
   CONFIG.USER_CLK_SEL_LIST1 {AXI_23_ACLK} \
   CONFIG.USER_HBM_DENSITY {4GB} \
   CONFIG.USER_HBM_STACK {1} \
   CONFIG.USER_MC0_ECC_BYPASS {true} \
   CONFIG.USER_MC0_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC0_REORDER_EN {false} \
   CONFIG.USER_MC0_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC10_ECC_BYPASS {true} \
   CONFIG.USER_MC10_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC10_REORDER_EN {false} \
   CONFIG.USER_MC10_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC11_ECC_BYPASS {true} \
   CONFIG.USER_MC11_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC11_REORDER_EN {false} \
   CONFIG.USER_MC11_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC12_ECC_BYPASS {true} \
   CONFIG.USER_MC12_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC12_REORDER_EN {false} \
   CONFIG.USER_MC12_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC13_ECC_BYPASS {true} \
   CONFIG.USER_MC13_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC13_REORDER_EN {false} \
   CONFIG.USER_MC13_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC14_ECC_BYPASS {true} \
   CONFIG.USER_MC14_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC14_REORDER_EN {false} \
   CONFIG.USER_MC14_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC15_ECC_BYPASS {true} \
   CONFIG.USER_MC15_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC15_REORDER_EN {false} \
   CONFIG.USER_MC15_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC1_ECC_BYPASS {true} \
   CONFIG.USER_MC1_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC1_REORDER_EN {false} \
   CONFIG.USER_MC1_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC2_ECC_BYPASS {true} \
   CONFIG.USER_MC2_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC2_REORDER_EN {false} \
   CONFIG.USER_MC2_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC3_ECC_BYPASS {true} \
   CONFIG.USER_MC3_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC3_REORDER_EN {false} \
   CONFIG.USER_MC3_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC4_ECC_BYPASS {true} \
   CONFIG.USER_MC4_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC4_REORDER_EN {false} \
   CONFIG.USER_MC4_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC5_ECC_BYPASS {true} \
   CONFIG.USER_MC5_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC5_REORDER_EN {false} \
   CONFIG.USER_MC5_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC6_ECC_BYPASS {true} \
   CONFIG.USER_MC6_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC6_REORDER_EN {false} \
   CONFIG.USER_MC6_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC7_ECC_BYPASS {true} \
   CONFIG.USER_MC7_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC7_REORDER_EN {false} \
   CONFIG.USER_MC7_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC8_ECC_BYPASS {true} \
   CONFIG.USER_MC8_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC8_REORDER_EN {false} \
   CONFIG.USER_MC8_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC9_ECC_BYPASS {true} \
   CONFIG.USER_MC9_MAINTAIN_COHERENCY {false} \
   CONFIG.USER_MC9_REORDER_EN {false} \
   CONFIG.USER_MC9_REORDER_QUEUE_EN {false} \
   CONFIG.USER_MC_ENABLE_01 {FALSE} \
   CONFIG.USER_MC_ENABLE_02 {FALSE} \
   CONFIG.USER_MC_ENABLE_03 {FALSE} \
   CONFIG.USER_MC_ENABLE_04 {FALSE} \
   CONFIG.USER_MC_ENABLE_05 {FALSE} \
   CONFIG.USER_MC_ENABLE_06 {FALSE} \
   CONFIG.USER_MC_ENABLE_07 {FALSE} \
   CONFIG.USER_MC_ENABLE_08 {FALSE} \
   CONFIG.USER_MC_ENABLE_09 {FALSE} \
   CONFIG.USER_MC_ENABLE_10 {FALSE} \
   CONFIG.USER_MC_ENABLE_11 {FALSE} \
   CONFIG.USER_MC_ENABLE_12 {FALSE} \
   CONFIG.USER_MC_ENABLE_13 {FALSE} \
   CONFIG.USER_MC_ENABLE_14 {FALSE} \
   CONFIG.USER_MC_ENABLE_15 {FALSE} \
   CONFIG.USER_MC_ENABLE_APB_01 {FALSE} \
   CONFIG.USER_MEMORY_DISPLAY {512} \
   CONFIG.USER_PHY_ENABLE_08 {FALSE} \
   CONFIG.USER_PHY_ENABLE_09 {FALSE} \
   CONFIG.USER_PHY_ENABLE_10 {FALSE} \
   CONFIG.USER_PHY_ENABLE_11 {FALSE} \
   CONFIG.USER_PHY_ENABLE_12 {FALSE} \
   CONFIG.USER_PHY_ENABLE_13 {FALSE} \
   CONFIG.USER_PHY_ENABLE_14 {FALSE} \
   CONFIG.USER_PHY_ENABLE_15 {FALSE} \
   CONFIG.USER_SAXI_00 {true} \
   CONFIG.USER_SAXI_01 {false} \
   CONFIG.USER_SAXI_02 {false} \
   CONFIG.USER_SAXI_03 {false} \
   CONFIG.USER_SAXI_04 {false} \
   CONFIG.USER_SAXI_05 {false} \
   CONFIG.USER_SAXI_06 {false} \
   CONFIG.USER_SAXI_07 {false} \
   CONFIG.USER_SAXI_08 {false} \
   CONFIG.USER_SAXI_09 {false} \
   CONFIG.USER_SAXI_10 {false} \
   CONFIG.USER_SAXI_11 {false} \
   CONFIG.USER_SAXI_12 {false} \
   CONFIG.USER_SAXI_13 {false} \
   CONFIG.USER_SAXI_14 {false} \
   CONFIG.USER_SAXI_15 {false} \
   CONFIG.USER_SINGLE_STACK_SELECTION {RIGHT} \
   CONFIG.USER_SWITCH_ENABLE_00 {FALSE} \
   CONFIG.USER_SWITCH_ENABLE_01 {FALSE} \
   CONFIG.USER_TEMP_POLL_CNT_0 {100000} \
 ] $hbm_0

  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.ALL_PROBE_SAME_MU_CNT {2} \
   CONFIG.C_PROBE0_MU_CNT {2} \
   CONFIG.C_PROBE10_MU_CNT {2} \
   CONFIG.C_PROBE11_MU_CNT {2} \
   CONFIG.C_PROBE12_MU_CNT {2} \
   CONFIG.C_PROBE13_MU_CNT {2} \
   CONFIG.C_PROBE14_MU_CNT {2} \
   CONFIG.C_PROBE15_MU_CNT {2} \
   CONFIG.C_PROBE16_MU_CNT {2} \
   CONFIG.C_PROBE17_MU_CNT {2} \
   CONFIG.C_PROBE18_MU_CNT {2} \
   CONFIG.C_PROBE19_MU_CNT {2} \
   CONFIG.C_PROBE1_MU_CNT {2} \
   CONFIG.C_PROBE20_MU_CNT {2} \
   CONFIG.C_PROBE21_MU_CNT {2} \
   CONFIG.C_PROBE22_MU_CNT {2} \
   CONFIG.C_PROBE23_MU_CNT {2} \
   CONFIG.C_PROBE24_MU_CNT {2} \
   CONFIG.C_PROBE25_MU_CNT {2} \
   CONFIG.C_PROBE26_MU_CNT {2} \
   CONFIG.C_PROBE27_MU_CNT {2} \
   CONFIG.C_PROBE28_MU_CNT {2} \
   CONFIG.C_PROBE29_MU_CNT {2} \
   CONFIG.C_PROBE2_MU_CNT {2} \
   CONFIG.C_PROBE30_MU_CNT {2} \
   CONFIG.C_PROBE31_MU_CNT {2} \
   CONFIG.C_PROBE32_MU_CNT {2} \
   CONFIG.C_PROBE33_MU_CNT {2} \
   CONFIG.C_PROBE34_MU_CNT {2} \
   CONFIG.C_PROBE35_MU_CNT {2} \
   CONFIG.C_PROBE36_MU_CNT {2} \
   CONFIG.C_PROBE37_MU_CNT {2} \
   CONFIG.C_PROBE38_MU_CNT {2} \
   CONFIG.C_PROBE39_MU_CNT {2} \
   CONFIG.C_PROBE3_MU_CNT {2} \
   CONFIG.C_PROBE40_MU_CNT {2} \
   CONFIG.C_PROBE41_MU_CNT {2} \
   CONFIG.C_PROBE42_MU_CNT {2} \
   CONFIG.C_PROBE43_MU_CNT {2} \
   CONFIG.C_PROBE4_MU_CNT {2} \
   CONFIG.C_PROBE5_MU_CNT {2} \
   CONFIG.C_PROBE6_MU_CNT {2} \
   CONFIG.C_PROBE7_MU_CNT {2} \
   CONFIG.C_PROBE8_MU_CNT {2} \
   CONFIG.C_PROBE9_MU_CNT {2} \
 ] $ila_0

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]

  # Create instance: proc_sys_reset_2, and set properties
  set proc_sys_reset_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_2 ]

  # Create instance: proc_sys_reset_3, and set properties
  set proc_sys_reset_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_3 ]

  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_0 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
 ] $util_ds_buf_0

  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0 ]
  set_property -dict [ list \
   CONFIG.PF0_DEVICE_ID_mqdma {9034} \
   CONFIG.PF2_DEVICE_ID_mqdma {9034} \
   CONFIG.PF3_DEVICE_ID_mqdma {9034} \
   CONFIG.axi_data_width {128_bit} \
   CONFIG.axilite_master_en {true} \
   CONFIG.axilite_master_scale {Kilobytes} \
   CONFIG.axilite_master_size {64} \
   CONFIG.axisten_freq {250} \
   CONFIG.en_gt_selection {true} \
   CONFIG.mode_selection {Advanced} \
   CONFIG.pcie_blk_locn {PCIE4_X0Y1} \
   CONFIG.pf0_device_id {9014} \
   CONFIG.pf0_msix_cap_pba_bir {BAR_1} \
   CONFIG.pf0_msix_cap_table_bir {BAR_1} \
   CONFIG.pl_link_cap_max_link_speed {8.0_GT/s} \
   CONFIG.pl_link_cap_max_link_width {X4} \
   CONFIG.plltype {QPLL1} \
   CONFIG.select_quad {GTY_Quad_233} \
 ] $xdma_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins hbm_0/SAXI_00]
  connect_bd_intf_net -intf_net pcie_refclk_1 [get_bd_intf_ports pcie_refclk] [get_bd_intf_pins util_ds_buf_0/CLK_IN_D]
  connect_bd_intf_net -intf_net s_apb_1 [get_bd_intf_ports s_apb] [get_bd_intf_pins hbm_0/SAPB_0]
  connect_bd_intf_net -intf_net s_axi_1 [get_bd_intf_ports s_axi] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
connect_bd_intf_net -intf_net [get_bd_intf_nets s_axi_1] [get_bd_intf_ports s_axi] [get_bd_intf_pins ila_0/SLOT_0_AXI]
  connect_bd_intf_net -intf_net xdma_0_M_AXI_LITE [get_bd_intf_ports m_axi_lite] [get_bd_intf_pins xdma_0/M_AXI_LITE]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_ports pci_express_x4] [get_bd_intf_pins xdma_0/pcie_mgt]

  # Create port connections
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_ports mig_clk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins ila_0/clk] [get_bd_pins proc_sys_reset_1/slowest_sync_clk]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins clk_wiz_0/clk_out2] [get_bd_pins hbm_0/HBM_REF_CLK_0]
  connect_bd_net -net clk_wiz_0_clk_out3 [get_bd_pins clk_wiz_0/clk_out3] [get_bd_pins hbm_0/APB_0_PCLK] [get_bd_pins proc_sys_reset_2/slowest_sync_clk]
  connect_bd_net -net clk_wiz_0_clk_out4 [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins clk_wiz_0/clk_out4] [get_bd_pins hbm_0/AXI_00_ACLK] [get_bd_pins proc_sys_reset_3/slowest_sync_clk]
  connect_bd_net -net hbm_0_apb_complete_0 [get_bd_ports apb_complete] [get_bd_pins hbm_0/apb_complete_0]
  connect_bd_net -net pcie_perstn_1 [get_bd_ports pcie_perstn] [get_bd_pins xdma_0/sys_rst_n]
  connect_bd_net -net proc_sys_reset_0_peripheral_aresetn [get_bd_ports pcie_rstn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn]
  connect_bd_net -net proc_sys_reset_1_interconnect_aresetn [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins proc_sys_reset_1/interconnect_aresetn]
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn [get_bd_ports mig_rstn] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins proc_sys_reset_1/peripheral_aresetn]
  connect_bd_net -net proc_sys_reset_2_peripheral_aresetn [get_bd_pins hbm_0/APB_0_PRESET_N] [get_bd_pins proc_sys_reset_2/peripheral_aresetn]
  connect_bd_net -net proc_sys_reset_3_peripheral_aresetn [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins hbm_0/AXI_00_ARESET_N] [get_bd_pins proc_sys_reset_3/peripheral_aresetn]
  connect_bd_net -net reset_1 [get_bd_ports reset] [get_bd_pins proc_sys_reset_0/ext_reset_in] [get_bd_pins proc_sys_reset_1/ext_reset_in] [get_bd_pins proc_sys_reset_2/ext_reset_in] [get_bd_pins proc_sys_reset_3/ext_reset_in]
  connect_bd_net -net util_ds_buf_0_IBUF_DS_ODIV2 [get_bd_pins util_ds_buf_0/IBUF_DS_ODIV2] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins util_ds_buf_0/IBUF_OUT] [get_bd_pins xdma_0/sys_clk_gt]
  connect_bd_net -net xdma_0_axi_aclk [get_bd_ports pcie_clk] [get_bd_pins clk_wiz_0/clk_in1] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins xdma_0/axi_aclk]
  connect_bd_net -net xdma_0_axi_aresetn [get_bd_pins proc_sys_reset_0/aux_reset_in] [get_bd_pins proc_sys_reset_1/aux_reset_in] [get_bd_pins proc_sys_reset_2/aux_reset_in] [get_bd_pins proc_sys_reset_3/aux_reset_in] [get_bd_pins xdma_0/axi_aresetn]
  connect_bd_net -net xdma_0_user_lnk_up [get_bd_ports pcie_lnk_up] [get_bd_pins xdma_0/user_lnk_up]

  # Create address segments
  create_bd_addr_seg -range 0x00010000 -offset 0x44A00000 [get_bd_addr_spaces xdma_0/M_AXI_LITE] [get_bd_addr_segs m_axi_lite/Reg] SEG_m_axi_lite_Reg
  create_bd_addr_seg -range 0x10000000 -offset 0x00000000 [get_bd_addr_spaces s_axi] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM00] SEG_hbm_0_HBM_MEM00
  create_bd_addr_seg -range 0x10000000 -offset 0x10000000 [get_bd_addr_spaces s_axi] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM01] SEG_hbm_0_HBM_MEM01
  create_bd_addr_seg -range 0x00400000 -offset 0x00000000 [get_bd_addr_spaces s_apb] [get_bd_addr_segs hbm_0/SAPB_0/Reg] SEG_hbm_0_Reg


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 



# Proc to create BD design_2
proc cr_bd_design_2 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_2

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:ila:6.2\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set arch_pc [ create_bd_port -dir I -from 38 -to 0 arch_pc ]
  set cache_miss [ create_bd_port -dir I -from 0 -to 0 cache_miss ]
  set clk [ create_bd_port -dir I -type clk clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {80000000} \
   CONFIG.PHASE {0.0} \
 ] $clk
  set commit_v [ create_bd_port -dir I -from 0 -to 0 commit_v ]
  set exception [ create_bd_port -dir I -from 0 -to 0 exception ]
  set instr [ create_bd_port -dir I -from 31 -to 0 instr ]
  set instret [ create_bd_port -dir I -from 0 -to 0 instret ]
  set interrupt [ create_bd_port -dir I -from 0 -to 0 interrupt ]
  set npc [ create_bd_port -dir I -from 38 -to 0 npc ]
  set pc [ create_bd_port -dir I -from 38 -to 0 pc ]
  set tlb_miss [ create_bd_port -dir I -from 0 -to 0 tlb_miss ]

  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.C_DATA_DEPTH {4096} \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {10} \
   CONFIG.C_PROBE0_WIDTH {39} \
   CONFIG.C_PROBE3_WIDTH {1} \
   CONFIG.C_PROBE4_WIDTH {39} \
   CONFIG.C_PROBE5_WIDTH {32} \
   CONFIG.C_PROBE9_WIDTH {39} \
 ] $ila_0

  # Create port connections
  connect_bd_net -net clk_0_1 [get_bd_ports clk] [get_bd_pins ila_0/clk]
  connect_bd_net -net probe0_0_1 [get_bd_ports npc] [get_bd_pins ila_0/probe0]
  connect_bd_net -net probe1_0_1 [get_bd_ports instret] [get_bd_pins ila_0/probe1]
  connect_bd_net -net probe2_0_1 [get_bd_ports exception] [get_bd_pins ila_0/probe2]
  connect_bd_net -net probe3_0_1 [get_bd_ports interrupt] [get_bd_pins ila_0/probe3]
  connect_bd_net -net probe4_0_1 [get_bd_ports pc] [get_bd_pins ila_0/probe4]
  connect_bd_net -net probe5_0_1 [get_bd_ports instr] [get_bd_pins ila_0/probe5]
  connect_bd_net -net probe6_0_1 [get_bd_ports cache_miss] [get_bd_pins ila_0/probe6]
  connect_bd_net -net probe7_0_1 [get_bd_ports tlb_miss] [get_bd_pins ila_0/probe7]
  connect_bd_net -net probe8_0_1 [get_bd_ports commit_v] [get_bd_pins ila_0/probe8]
  connect_bd_net -net probe9_0_1 [get_bd_ports arch_pc] [get_bd_pins ila_0/probe9]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_2()
cr_bd_design_2 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_2.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_2.bd ] 



# Proc to create BD design_3
proc cr_bd_design_3 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_3

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:ila:6.2\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set clk [ create_bd_port -dir I -type clk clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {80000000} \
 ] $clk
  set mie [ create_bd_port -dir I -from 63 -to 0 mie ]
  set mip [ create_bd_port -dir I -from 63 -to 0 mip ]
  set mstatus [ create_bd_port -dir I -from 63 -to 0 mstatus ]
  set priv [ create_bd_port -dir I -from 1 -to 0 priv ]

  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.C_DATA_DEPTH {4096} \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {4} \
   CONFIG.C_PROBE0_WIDTH {64} \
   CONFIG.C_PROBE1_WIDTH {64} \
   CONFIG.C_PROBE2_WIDTH {64} \
   CONFIG.C_PROBE3_WIDTH {2} \
 ] $ila_0

  # Create port connections
  connect_bd_net -net clk_0_1 [get_bd_ports clk] [get_bd_pins ila_0/clk]
  connect_bd_net -net probe0_0_1 [get_bd_ports mstatus] [get_bd_pins ila_0/probe0]
  connect_bd_net -net probe1_0_1 [get_bd_ports mie] [get_bd_pins ila_0/probe1]
  connect_bd_net -net probe2_0_1 [get_bd_ports mip] [get_bd_pins ila_0/probe2]
  connect_bd_net -net probe3_0_1 [get_bd_ports priv] [get_bd_pins ila_0/probe3]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_3()
cr_bd_design_3 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_3.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_3.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcvu37p-fsvh2892-2LV-e -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcvu37p-fsvh2892-2LV-e" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcvu37p-fsvh2892-2LV-e -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcvu37p-fsvh2892-2LV-e" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
